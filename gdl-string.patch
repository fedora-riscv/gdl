diff -up gdl-0.9.1/src/gdlgstream.cpp.includes gdl-0.9.1/src/gdlgstream.cpp
--- gdl-0.9.1/src/gdlgstream.cpp.includes	2010-11-17 00:24:55.000000000 -0700
+++ gdl-0.9.1/src/gdlgstream.cpp	2011-08-18 13:17:08.547167104 -0600
@@ -201,7 +201,7 @@ const char * GDLGStream::TranslateFormat
   // skip conversion if the string is empty
   if (len == 0) return in;
 
-  const string fonts[] = {
+  const std::string fonts[] = {
     "#fn",      // !0  : unused
     "#fn",      // !1  : unused
     "#fn",      // !2  : unused
@@ -240,7 +240,7 @@ const char * GDLGStream::TranslateFormat
   int curr_lev = 0; // (incremented with #u, decremented with #d)
   int curr_pos = 0; // (current position in string)
   int save_pos = 0; // (position in string used in !S/!R save/restore)
-  string out = string("");
+  std::string out = std::string("");
 
   for (size_t i = 0; i < len; i++) {
     if (in[i] == '!' && in[i + 1] != '!')
diff -up gdl-0.9.1/src/gdlgstream.hpp.includes gdl-0.9.1/src/gdlgstream.hpp
--- gdl-0.9.1/src/gdlgstream.hpp.includes	2010-06-11 09:09:51.000000000 -0600
+++ gdl-0.9.1/src/gdlgstream.hpp	2011-08-18 13:10:41.285235153 -0600
@@ -50,7 +50,7 @@ public:
   {
 //   std::cerr << "GDLGStream()" << std::endl;
     if (!checkPlplotDriver(driver))
-      ThrowGDLException(string("PLplot installation lacks the requested driver: ") + driver);
+      ThrowGDLException(std::string("PLplot installation lacks the requested driver: ") + driver);
   }
 
   virtual ~GDLGStream()
@@ -103,7 +103,7 @@ if( devNames.empty())// == NULL)
 
 //     devNames = new std::vector<std::string>( numdevs_plus_one - 1);
     for( int i = 0; i < numdevs_plus_one - 1; ++i)
-		devNames.push_back(string(devnames[ i]));
+		devNames.push_back(std::string(devnames[ i]));
     
     free(devnames);
 }
@@ -111,7 +111,7 @@ if( devNames.empty())// == NULL)
 // for debug
 std::vector<std::string> devnamesDbg = devNames;
 
-return std::find( devNames.begin(), devNames.end(), string( driver)) != devNames.end();
+return std::find( devNames.begin(), devNames.end(), std::string( driver)) != devNames.end();
 
 //     checking if a given driver is in the list
 //     bool supported = false;
