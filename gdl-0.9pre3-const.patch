--- gdl-0.9pre3/src/ncdf_att_cl.cpp.const	2006-11-22 10:15:39.000000000 -0700
+++ gdl-0.9pre3/src/ncdf_att_cl.cpp	2006-11-22 10:16:59.000000000 -0700
@@ -237,7 +237,7 @@
 	    ncdf_att_handle_error(e,status,"NCDF_ATTGET",ip);
 
 
-	    dimension dim((size_t *) &length, (size_t) 1);
+	    dimension dim((const SizeT *) &length, (SizeT) 1);
 	    DLongGDL* temp=new DLongGDL(dim, BaseGDL::NOZERO);
 	    memcpy(&(*temp)[0],&(*ip),length*sizeof(int));	      
 	    delete ip;
@@ -255,7 +255,7 @@
 	  ncdf_att_handle_error(e,status,"NCDF_ATTGET",sp);
 	  
 	  
-	  dimension dim((size_t *) &length, (size_t) 1);
+	  dimension dim((const SizeT *) &length, (SizeT) 1);
 	  DIntGDL* temp=new DIntGDL(dim, BaseGDL::NOZERO);
 	  
 	  memcpy(&(*temp)[0],&(*sp),length*sizeof(short));	      
@@ -277,7 +277,7 @@
 	    ncdf_att_handle_error(e,status,"NCDF_ATTGET",fp);
 
 
-	    dimension dim((size_t *) &length, (size_t) 1);
+	    dimension dim((const SizeT *) &length, (SizeT) 1);
 	    DFloatGDL* temp=new DFloatGDL(dim, BaseGDL::NOZERO);
 
 	    memcpy(&(*temp)[0],&(*fp),length*sizeof(float));	      
@@ -299,7 +299,7 @@
 	  
 	  ncdf_att_handle_error(e,status,"NCDF_ATTGET",dp);
 	  
-	  dimension dim((size_t *) &length, (size_t) 1);
+	  dimension dim((const SizeT *) &length, (SizeT) 1);
 	  DDoubleGDL* temp=new DDoubleGDL(dim, BaseGDL::NOZERO);
 	  
 	  memcpy(&(*temp)[0],&(*dp),length*sizeof(double));	      	 
@@ -339,7 +339,7 @@
 	  
 	  ncdf_att_handle_error(e,status,"NCDF_ATTGET",bp);
 	  
-	  dimension dim((size_t *) &length, (size_t) 1);
+	  dimension dim((const SizeT *) &length, (SizeT) 1);
 	  DByteGDL* temp=new DByteGDL(dim, BaseGDL::NOZERO);
 	  
 	  memcpy(&(*temp)[0],&(*bp),length*sizeof(unsigned char));	      	 
--- gdl-0.9pre3/src/ncdf_var_cl.cpp.const	2006-11-22 07:34:57.000000000 -0700
+++ gdl-0.9pre3/src/ncdf_var_cl.cpp	2006-11-22 10:46:03.000000000 -0700
@@ -161,7 +161,7 @@
     DStructGDL* inq=new DStructGDL(ncdf_varinq);
     inq->InitTag("NAME",DStringGDL(var_name));
 
-    dimension dim((size_t *) &var_ndims, (size_t) 1);
+    dimension dim((const SizeT *) &var_ndims, (SizeT) 1);
     DULongGDL* dims_res = new DULongGDL(dim, BaseGDL::NOZERO);
     for( size_t i=0; i<var_ndims; ++i) {
       (*dims_res)[ i] = var_dims[i];
@@ -271,7 +271,7 @@
 
 
     size_t one=1;
-    dimension dim((size_t *) &one, (size_t) 1);
+    dimension dim((const SizeT *) &one, (SizeT) 1);
     if(var_type == NC_DOUBLE){
 
       double dvar;
@@ -436,7 +436,7 @@
 
 
 
-	dimension dim(transposed_dim_length, var_ndims);
+	dimension dim((const SizeT *) transposed_dim_length, (SizeT) var_ndims);
 	if(var_type == NC_DOUBLE){
 	  double* dvar=new double[array_size];
 	  
@@ -631,7 +631,7 @@
 	      transposed_dim_length[trans[i]]=cou[i];
 	      array_size=array_size*cou[i];
 	    }
-	    dimension dim(transposed_dim_length, var_ndims);
+	    dimension dim((const SizeT *) transposed_dim_length, (SizeT) var_ndims);
 	    if(var_type == NC_DOUBLE)
 	      {
 		double* dvar=new double[array_size];
@@ -818,7 +818,7 @@
 	      transposed_dim_length[trans[i]]=cou[i];
 	      array_size=array_size*cou[i];
 	    }
-	    dimension dim(transposed_dim_length, var_ndims);
+	    dimension dim((const SizeT *) transposed_dim_length, (SizeT) var_ndims);
 	    	  
 	    if(var_type == NC_DOUBLE)
 	      {
